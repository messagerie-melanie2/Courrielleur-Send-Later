# -*- coding: utf-8 -*-
sendaround=Enviar por volta
entervalid=Introduza uma data válida abaixo
sendwithfunction=Enviar de acordo com a função “%1$S”
sendspecifyfunction=Selecionar função através do menu acima
January=Janeiro
February=Fevereiro
March=Março
April=Abril
May=Maio
June=Junho
July=Julho
August=Agosto
September=Setembro
October=Outubro
November=Novembro
December=Dezembro
OptionShortcutAlertTitle=Valor de atalho inválido
OptionShortcutAlertText=Atalho %1$S tem o valor “%2$S” inválido
SendingUnsentError=Send Later: Erro ao tentar enviar mensagens ainda não enviadas. A sua caixa de saída pode estar corrompida, e as suas mensagens programadas podem não ter sido enviadas. Veja https://blog.kamens.us/send-later/#outbox.
CopyUnsentError=Send Later: Erro ao copiar a mensagem agendada para a caixa de saída a fim de ser entregue (code %x). O Send Later foi desactivado! Veja https://blog.kamens.us/send-later/#outbox-copy-failure.
CopyRecurError=Send Later: Erro ao copiar mensagem recorrente para a pasta de Rascunhos (code %x). Send Later foi desactivado! Veja https://blog.kamens.us/send-later/#drafts-copy-failure.
CorruptFolderError=Send Later: A pasta %S pode estar corrompida. Por favor abra as suas propriedades e repare-a. Veja https://blog.kamens.us/send-later/#corrupt-drafts-error.
MessageResendError=Send Later: Tentativa de re-enviar mensagem já enviada?! Provavelmente a sua Caixa de Saída ou a pasta de Rascunhos %S está corrompida. Por favor repare-as tal como descrito em https://blog.kamens.us/send-later/#corrupt-outbox.
minutely=a cada minuto
daily=diariamente
weekly=semanalmente
monthly=mensalmente
yearly=anualmente
plural_minutely=minutos
plural_daily=dias
plural_weekly=semanas
plural_monthly=meses
plural_yearly=anos
every_minutely=todos os %S minuto(s)
every_daily=todos os %S dias
every_weekly=todas as %S semanas
every_monthly=todos os %S meses
every_yearly=todos %S anos
everyempty=semana do mês
everymonthly=%1$S %2$S do mês
everymonthly_short=%1$S %2$S
betw_times=entre %S:%S e %S:%S
only_on_days=em %S
day0=Domingo
day1=Segunda-feira
day2=Terça-feira
day3=Quarta-feira
day4=Quinta-feira
day5=Sexta-feira
day6=Sábado
ord1=1º
ord2=2º
ord3=3º
ord4=4º
ord5=5º
draftSaveWarning=AVISO: De forma a prevenir que a mensagem seja enviada pelo Send Later enquanto está a editá-la, a sua data de envio foi cancelada. Por favor defina uma nova data quando terminar a sua edição.
AreYouSure=Tem a certeza?
OutboxConfirmMessage=Clicando em "Colocar na caixa de saída" coloca a mensagem na caixa de saída imediatamente. Isto não agenda a mensagem para ser enviada num momento específico. Para isso, clique no botão "Enviar" na caixa verde depois de introduzir um tempo de envio válido. Tem certeza que quer colocar a mensagem na caixa de saída agora?
SendNowConfirmMessage=Clicando em "Enviar agora" envia a mensagem imediatamente. Isto não agenda a mensagem para ser enviada num momento específico. Para isso, clique no botão "Enviar" na caixa verde depois de introduzir um tempo de envio válido. Tem certeza de que deseja enviar a mensagem agora?
ConfirmAgain=Mostre este aviso da próxima vez.
ScheduledMessagesWarningTitle=Aviso de mensagens agendadas
ScheduledMessagesWarningQuitRequested=Há mensagens agendadas para serem enviadas. O Send Later apenas pode enviar mensagens quando %S está a correr. Tem a certeza de que pretende sair?
ScheduledMessagesWarningQuit=O Send Later apenas pode enviar mensagens quando %S está a correr. Por favor lembre-se de o reiniciar antes da data agendada para as mensagens serem enviadas.
EnigmailIncompatTitle=Problema de compatibilidade do Send Later / Enigmail
EnigmailIncompatText=A versão instalada do Enigmail é incompatível com o Send Later, por isso o agendamento de mensagens com o Send Later foi desactivado. Por favor contacte o criador do Send Later (jik@kamens.us) para obter ajuda.
TimeMismatchConfirmTitle=Horário de envio / restrição incoerentes.
TimeMismatchConfirmBody=A hora de envio que introduziu, %1$S, não coincide com as restrições de horário especificadas. Clique em Cancelar para editar a hora de envio, ou OK para ajusta-la automaticamente para %2$S.
endTimeWarningTitle=Restrição de horário de mensagem inválida
endTimeWarningBody=Ao especificar uma restrição de horário de mensagem, a hora final não pode ser mais cedo que a hora inicial. Por favor ajuste a sua restrição de horário ou desactive-a.
missingDaysWarningTitle=Restrição de data inválida
missingDaysWarningBody=Activou uma restrição de data de mensagem sem especificar quaisquer dias. Por favor desactive a restrição de data ou especifique pelo menos um dia para entrega.
InvalidArgsTitle=Argumentos da função inválidos
InvalidArgsBody=Os argumentos da função não são válidos. Especifique uma lista JavaScript,sem que estjam entre chavetas.
BlockedLateMessage=A mensagem com o assunto “%1$S” na pasta de Rascunhos %2$S foi agendada para ser entregue há mais de %3$S minutos, por isso a entrega foi bloqueada. Deve editar o rascunho e envia-lo manualmente ou reagendar-lo. Pode também desactivar a preferência “Não entregar mensagens com mais de # minutos de atraso” para parar o bloqueamento da entrega de mensagens atrasadas.
EditorReadMeCode=// Bemvindo ao editor da função Send Later!\n//\n// O editor deixa-o criar funções javaScript implementando agendamento complexo de mensagens que podem ser associadas a botões de atalho ou selecionadas no diálogo Send Later.\n//\n// Como pode ver em cima, quando uma função de agendamento é chamada, vão ser dados três argumentos:\n// * "specname" é necessário se quiser recorrências (ver em baixo)\n// * "prev" é a hora de agendamento anterior, caso seja uma chamada recorrente\n// * "args" é um argumento extra que é retornado pela chamada anterior se esta for a chamada recorrente\n//\n// O código precisa das variáveis "next", "nextspec", and\n// "nextargs" como descrito:\n// * "next" é o número de minutos no futuro ou uma data indicando \n// quando é que a mensagem deve ser enviada.\n// * "nextspec" é a especificação da recorrência se for esta a intenção \n// (ver https://blog.kamens.us/send-later/#dynamic-recurrence). \n// Se não for definida, então a mensagem só será enviada uma vez. \n// Nota: Se quiser que a função seja chamada outra vez para uma recorrência, \n// fazer o seguinte:\n//     nextspec = "function " + specname;\n// * "nextargs" é um série de argumentos que serão passados para a \n// próxima chamada da função como "args".\n//\n// Enquanto estiver a trabalhar na sua função, pode testá-la preenchendo os valores para "prev"\n// e "args" na caixa de texto que está a seguir e clicando "Execute" para executar a função \n// e ver os resultados.\n//\n// Há duas funções de exemplo pré-configuradas, "BusinessHours" e "DaysInARow",\n// que pode ver e brincar com ela para aprender melhor.\n//\n// Esta função "ReadMeFirst" apenas envia a mensagem, agora.\nnext = new Date();
EditorReadMeHelp=Qualquer texto que coloque aqui será mostrado como uma legenda quando passar o rato sobre o nome da função no menu. Pode usar esta opção para documentar o que a função faz e quais os argumentos que esta aceita.
_BusinessHoursCode=/ Defaults\nvar workDays = [1, 2, 3, 4, 5]; // Seg - Sex; Sun == 0, Sat == 6\nvar workStart = [8, 30]; // Inicio do dia util em [H, M]\nvar workEnd = [17, 30]; // Fim do dia util em [H, M]\nif (args && args[0])\n    workDays = args[0];\nif (args && args[1])\n    workStart = args[1];\nif (args && args[2])\n    workEnd = args[2];\nif (prev)\n    // Not expected in normal usage, but used as the current time for testing.\n    next = new Date(prev);\nelse\n    next = new Date();\n// Se esta apos o fim do dia util ou num dia não útil, \n// avançar para a primeira hora útil do dia seguinte.\n\nwhile ((next.getHours() > workEnd[0]) ||\n       (next.getHours() == workEnd[0] && next.getMinutes() > workEnd[1]) ||\n       (workDays.indexOf(next.getDay()) == -1)) {\n    next.setDate(next.getDate() + 1);\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}\n// Se a hora actual é antes do inicio do dia de trabalho, mover para o inicio do dia de trabalho. \n// If we're before the beginning of the workday, move to its start time.\nif ((next.getHours() < workStart[0]) ||\n    (next.getHours() == workStart[0] && next.getMinutes() < workStart[1])) {\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}
BusinessHoursHelp=Envie a mensagem agora se é durante o horário laboral, ou no início do próximo dia de trabalho. Pode alterar a definição de dias de trabalho (padrão: Seg - Sex), passando uma matriz de números de dia de trabalho como o primeiro argumento, onde 0 é domingo e 6 é sábado. Pode alterar o início do trabalho ou horário de término (padrão: 08:30-17:30), passando uma matriz de [H, M] como o segundo ou terceiro argumento. Especifique "nulo" para argumentos anteriores, que você não mudar. Por exemplo, "null, [9, 0], [17, 0]" muda as horas de trabalho sem alterar os dias de trabalho.
DaysInARowCode=// Envie  a primeira mensagem agora, mensagens seguintes uma vez por dia.\nif (! prev)\n    next = new Date();\nelse {\n    var now = new Date();\n    next = new Date(prev); // Copie o argumento de data para que ele não seja modificado por nós. \n    do {\n        next.setDate(next.getDate() + 1);\n    } while (next < now);\n    // ^^^ Não tente enviar no passado em caso de que o Thunderbird estivesse em modo de hibernação durante \n    // o periodo de envio agendado\n}\nif (! args) // Enviar a mensagem 3 vezes por defeito.\n    args = [3];\nnextargs = [args[0] - 1];\n// Reocurre se não tiverem sido feitos envios suficientes.\nif (nextargs[0] > 0)\n    nextspec = "function " + specname;
DaysInARowHelp=Enviar a mensagem agora, e subsequentemente uma vez por dia, ao mesmo tempo, até que tenha sido enviada três vezes. Especifique um número como um argumento para alterar o número total de envios.
DiscardConfirmTitle=Ignorar alterações?
DiscardConfirmBody=Existem alterações por guardar. Deseja ignorá-las?
UntestedSaveTitle=Guardar função não testada?
UntestedSaveBody=A função não foi testada (com o botão “Executar”) desde que foi alterada pela última vez. Tem certeza de que deseja guardar ou exportá-la?
BadSaveTitle=Nome ou código da função inválidos
BadSaveBody=Verifique se o nome da função e o código são válidos antes de guardar ou exportar.
ReplacingFunctionTitle=Substituir a função existente?
ReplacingFunctionBody=Já existe uma função com o nome especificado. Tem certeza que deseja substituí-la?
NoNextValueError=Função não define um valor para “next”.
BadNextValueError=O valor "%1$S" de "next" não é um número nem uma data
BadNextArgsError=o valor “%1$S” de “nextargs” não é um Array
FunctionDeleteConfirmBody=Tem certeza que deseja eliminar esta função? Se ela estiver associada a quaisquer botões de atalho, estes deixarão de funcionar, e se existirem quaisquer mensagens recorrentes a usá-la, vão deixar de reagendar após a próxima vez que sejam enviadas.
ImportTitle=Escolha o ficheiro a exportar
SLJFilterLabel=Ficheiros JSON Send Later
ImportError=Erro de importação
ExportTitle=Escolha um destino para a exportação
RenameFunctionTitle=Renomear a função existente?
RenameFunctionBody=Alterou o nome de uma função existente, “%1$S”. Pretende mudar o nome da função existente ou salvar uma nova função com outro nome?
RenameFunctionRenameButton=Renomear
RenameFunctionNewButton=Nova
FunctionErrorTitle=Erro ao invocar a função dinamica
FunctionErrorBody=Erro ao invocar a função de programação dinâmica: “%1$S”
cancel_on_reply=cancelar após reposta
