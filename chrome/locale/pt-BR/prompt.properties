# -*- coding: utf-8 -*-
sendaround=Enviar por volta de
entervalid=Insira uma data válida acima
sendwithfunction=Enviar de acordo com a função “%1$S”
sendspecifyfunction=Selecionar uma função do menu acima
January=Janeiro
February=Fevereiro
March=Março
April=Abril
May=Maio
June=Junho
July=Julho
August=Agosto
September=Setembro
October=Outubro
November=Novembro
December=Dezembro
OptionShortcutAlertTitle=Valor de atalho inválido
OptionShortcutAlertText=Atalho %1$S contém valor inválido “%2$S”
SendingUnsentError=Send Later: Erro ao enviar mensagens não enviadas. Caixa de saída pode estar corrompida e suas mensagens agendadas não podem ser enviadas. Veja https://blog.kamens.us/send-later/#outbox.
CopyUnsentError=Send Later: Erro ao copiar mensagem programada da Caixa de saída para o envio (código %x). Send Later foi desativado! Veja https://blog.kamens.us/send-later/#outbox-copy-failure.
CopyRecurError=Send Later: Erro ao copiar mensagem recorrente da pasta Rascunhos (código %x). Send Later foi desativado! Veja https://blog.kamens.us/send-later/#drafts-copy-failure.
CorruptFolderError=Send Later: A pasta %S pode está corrompida. Por favor, abra suas propriedades e corrija. Veja https://blog.kamens.us/send-later/#corrupt-drafts-error.
MessageResendError=Send Later: Tentativa de reenvio de mensagem já enviada?! Sua caixa de saída ou rascunhos %S está provavelmente corrompida. Por favor, corrija como descrito em https://blog.kamens.us/send-later/#corrupt-outbox.
minutely=a cada minuto
daily=diariamente
weekly=semanalmente
monthly=mensalmente
yearly=anualmente
plural_minutely=minutos
plural_daily=dias
plural_weekly=semanas
plural_monthly=meses
plural_yearly=anos
every_minutely=a cada %S minutos
every_daily=a cada %S dias
every_weekly=a cada %S semanas
every_monthly=a cada %S meses
every_yearly=a cada %S anos
everyempty=semana do mês
everymonthly=%1$S %2$S do mês
everymonthly_short=%1$S %2$S
betw_times=entre %S:%S e %S:%S
only_on_days=em %S
day0=domingo
day1=segunda-feira
day2=terça-feira
day3=quarta-feira
day4=quinta-feira
day5=sexta-feira
day6=sábado
ord1=1a.(o.)
ord2=2a.(o.)
ord3=3a.(o.)
ord4=4a.(o.)
ord5=5a.(o.)
draftSaveWarning=ATENÇÃO: para evitar que Send Later envie a mensagem enquanto é editada, cancelou-se o horário programado de envio. Por favor, reprograme o envio da mensagem quando terminar a edição.
AreYouSure=Você tem certeza?
OutboxConfirmMessage=Clicando em “Coloque na Caixa de Saída” transfere imediatamente a mensagem para sua Caixa de Saída e NÃO IRÁ programar o envio da mensagem em horário específico. Para isso, clique em “Enviar por volta de…” na caixa verde após inserir horário válido. Está seguro que deseja colocar a mensagem na Caixa de Saída agora?
SendNowConfirmMessage=Ao clicar “Enviar Agora” a msg é enviada imediatamente e NÃO SERÁ agendada para um horário específico. Caso deseje esta opção, clique em “Enviar por volta de…” na área verde após inserir um horário válido. Deseja enviar esta mensagem imediatamente?
ConfirmAgain=Mostrar este aviso da próxima vez
ScheduledMessagesWarningTitle=Aviso de mensagens agendadas
ScheduledMessagesWarningQuitRequested=Há mensagens programados para serem enviadas. Send Later só pode enviar mensagens quando o %S está em execução. Você tem certeza que deseja sair?
ScheduledMessagesWarningQuit=Send Later só pode enviar mensagens quando o %S está em execução. Por favor, lembre-se de reiniciá-lo antes do tempo programado para o envio de suas mensagens!
EnigmailIncompatTitle=Falha de compatibilidade entre Send Later e Enigmail
EnigmailIncompatText=A versão instalada de Enigmail é incompatível com Send Later: o serviço de agendar mensagens com Send Later foi desativado. Contate o responsável por Send Later (jik@kamens.us) para assistência.
TimeMismatchConfirmTitle=Incompatibilidade entre hora de envio / restrição
TimeMismatchConfirmBody=A hora de envio informada, %1$S, não se enquadra nas restrições de tempo especificadas. Cancele a operação e edite hora de envio ou OK para ajuste automático em %2$S.
endTimeWarningTitle=Restrição inválida de horário da mensagem
endTimeWarningBody=Ao especificar uma restrição de horário de mensagem, a hora final não pode ser anterior à hora inicial. Favor ajustar restrição de horário ou desabilite.
missingDaysWarningTitle=Restrição inválida de data.
missingDaysWarningBody=Foi habilitada restrição de data de mensagem sem especificar o(s) dia(s). Favor desabilitar restrição de data ou especifique ao menos uma data de envio.
InvalidArgsTitle=Argumentos de função inválidos
InvalidArgsBody=Os argumentos de função não são válidos. Especifique uma lista JavaScript sem os colchetes.
BlockedLateMessage=A mensagem com assunto “%1$S” em Rascunhos %2$S foi agendada para envio há mais de %3$S minutos atrás, portanto o envio foi bloqueado. Edite o rascunho, envie-a manualmente ou reagende o envio. Também poderá desabilitar a opção “não envie mensagens com mais de # minutos de atraso” interrompendo bloqueio do envio de mensagens atrasadas.
EditorReadMeCode=// Benvindo(a) ao editor de função do Send Later!\n// \n// O editor permite que você crie funções JavaScript para\n// implementação de complexas mensagens de lógica de agendamento, as\n// quais podem ser associadas a teclas de atalho ou selecionadas na\n// caixa de diálogo Send Later.\n// \n// Como você pode ver acima, quando uma função de agendamento é\n// chamada, serão dados três argumentos:\n// \n// * "specname" é necessário se você quiser uma função recorrente\n//   (veja abaixo)\n//   \n// * "prev" é a data agendada de envio anterior, caso esta seja uma\n//   chamada recorrente\n// \n// * "args" são os argumentos extras devolvidos pela chamada prévia se\n//    esta for uma chamada recorrente\n// \n// Seu código precisa definir as variáveis "next", "nextspec", e\n// "nextargs" da seguinte forma:\n// \n// * "next" pode ser tanto o número de minutos no futuro como um\n//   objeto Date indicando quando a mensagem deverá ser enviada.\n// \n// * "nextspec" é uma especificação de recorrência caso se deseje que\n//   esta mensagem seja recorrente (veja\n//   https://blog.kamens.us/send-later/#dynamic-recurrence). Se você\n//   não configurar isto, então a mensagem será enviada apenas uma\n//   vez. Nota: caso queira que sua função seja chamada de novo por\n//   recorrência, faça:\n// \n//   nextspec = "function " + specname;\n// \n// * "nextargs" é um conjunto de argumentos que se deseja passar na\n//   próxima chamada da função como "args".\n// \n// Enquanto você estiver trabalhando na sua função, você pode testá-la\n// preenchendo valores para "prev" e "args" nas caixas de texto abaixo\n// e então clicar "Execute" para executar a função e ver os\n// resultados.\n// \n// Existem duas funções de amostra pré-configuradas, "BusinessHours" e\n// "DaysInARow", as quais você pode olhar e experimentar para aprender\n// mais.\n// \n// Esta função "ReadMeFirst" apenas faz a mensagem ser enviada\n// imediatamente, por meio da seguinte linha.\n\nnext = new Date();
EditorReadMeHelp=Qualquer texto que você por aqui será apresentado como uma dica de contexto quando você pairar sobre o nome da função no menu. Você pode usar isto para mostrar o que a função faz e quais argumentos aceita.
_BusinessHoursCode=// Padrões\nvar workDays = [1, 2, 3, 4, 5]; // Mon - Fri; Sun == 0, Sat == 6\nvar workStart = [8, 30]; // Início de dia útil como [H, M]\nvar workEnd = [17, 30]; // Início de dia útil como [H, M]\nif (args && args[0])\n workDays = args[0];\nif (args && args[1])\n workStart = args[1];\nif (args && args[2])\n workEnd = args[2];\nif (prev)\n // Não previsto no uso normal, mas usado como o tempo atual para testes.\n next = new Date(prev);\nelse\n next = new Date();\n// Se ultrapassou-se o limite do dia útil ou outro dia, mover para o início \n// do próximo dia útil.\nwhile ((next.getHours() > workEnd[0]) ||\n (next.getHours() == workEnd[0] && next.getMinutes() > workEnd[1]) ||\n (workDays.indexOf(next.getDay()) == -1)) {\n next.setDate(next.getDate() + 1);\n next.setHours(workStart[0]);\n next.setMinutes(workStart[1]);\n}\n// Se se estiver antes do início de dia útil, mover para o seu início.\nif ((next.getHours() < workStart[0]) ||\n (next.getHours() == workStart[0] && next.getMinutes() < workStart[1])) {\n next.setHours(workStart[0]);\n next.setMinutes(workStart[1]);\n}
BusinessHoursHelp=Enviar a mensagem agora caso seja horário comercial, ou no início do próximo dia util. Você pode mudar a definição de dia útil (padrão: Seg - Sex) ao inserir um conjunto de números de dias úteis como primeiro argumento, onde 0 é Domingo e 6 é Sábado. Você pode mudar o início e o fim do horário comercial (padrão: 8:30 - 17:30) passando um conjunto [H, M] como segundo e terceiro argumentos. Especificar “null” para os argumentos anteriores não os mudará. Por exemplo,“null, [9, 0], [17, 0]” mudará os horários comerciais sem mudar os dias úteis.
DaysInARowCode=// Enviar a primeira mensagem agora, mensagens posteriores uma vez ao dia.\nif (! prev)\n    next = new Date();\nelse {\n    var now = new Date();\n    next = new Date(prev); // Copiar o argumento da data tal que não seja modificado.\n    do {\n        next.setDate(next.getDate() + 1);\n    } while (next < now);\n    // ^^^ Não tentar enviar ao passado, caso o Thunderbird esteja adormecido no\n    // horário agendado de envio.\n}\nif (! args) // Enviar mensagens três vezer por padrão.\n    args = [3];\nnextargs = [args[0] - 1];\n// Repetir se ainda não tiver sido feito suficiente número de envios.\nif (nextargs[0] > 0)\n    nextspec = "function " + specname;
DaysInARowHelp=Enviar a mensagem agora, e posteriormente uma vez ao dia no mesmo horário, até que tenha sido enviada três vezes. Especificar um número como argumento para mudar o número total de envios.
DiscardConfirmTitle=Descartar alterações?
DiscardConfirmBody=Existem alterações não salvas. Quer descartá-las?
UntestedSaveTitle=Salvar função não testada?
UntestedSaveBody=A função não foi testada (com o botão “Executar”) desde a última alteração. Tem certeza que quer salvá-la ou exportá-la?
BadSaveTitle=Nome de função ou código inválido.
BadSaveBody=Por favor, certifique-se de que o nome da função e o código estejam válidos antes de salvar ou exportar.
ReplacingFunctionTitle=Sobrescrever a função existente?
ReplacingFunctionBody=Uma função com o nome especificado já existe. Tem certeza que quer sobrescrevê-la?
NoNextValueError=Função não definiu o valor “next”.
BadNextValueError=O valor “next” “%1$S”, não é nem número nem data.
BadNextArgsError=O valor “nextargs” “%1$S” não é um conjunto.
FunctionDeleteConfirmBody=Tem certeza que quer apagar esta função? Se estiver associada com botões de atalho, estes pararão de funcionar, e se existirem mensagens recorrentes os usando, elas falharão em ser reagendadas após a próxima vez que forem enviadas.
ImportTitle=Escolha o arquivo a ser importado
SLJFilterLabel=Send Later os arquivos JSON
ImportError=Erro de importação
ExportTitle=Escolha o destino para exportação
RenameFunctionTitle=Renomear a função existente?
RenameFunctionBody=Você modificou o nome de uma função existente, “%1$S”. Quer renomear a função existente ou salvar uma função separada com o novo nome?
RenameFunctionRenameButton=Renomear
RenameFunctionNewButton=Novo
FunctionErrorTitle=Erro ao invocar a função dinamica
FunctionErrorBody=Erro ao invocar a função de programação dinâmica: “%1$S”
cancel_on_reply=cancelar após reposta
