# -*- coding: utf-8 -*-
sendaround=Skicka kring
entervalid=Ange ett giltigt datum ovan
sendwithfunction=Skicka enligt funktion "%1$S"
sendspecifyfunction=Välj en funktion från menyn ovan
January=januari
February=februari
March=mars
April=april
May=maj
June=juni
July=juli
August=augusti
September=september
October=oktober
November=november
December=december
OptionShortcutAlertTitle=Ogiltigt värde för genväg
OptionShortcutAlertText=Genvägen %1$S har ett ogiltigt värde: “%2$S”
SendingUnsentError=Send Later: Fel vid sändning av ej skickade meddelanden. Din utkorg kan vara skadad och dina schemalagda meddelanden kanske inte har skickats. Läs mer på https://blog.kamens.us/send-later/#outbox.
CopyUnsentError=Send Later: Fel vid kopiering av schemalagt meddelande till Utkorgen för sändning (kod %x). Send Later har inaktiverats! Läs mer på https://blog.kamens.us/send-later/#outbox-copy-failure.
CopyRecurError=Send Later: Fel vid kopiering av återkommande meddelande till Utkast-mappen (kod %x). Send Later har inaktiverats! Läs mer på https://blog.kamens.us/send-later/#drafts-copy-failure.
CorruptFolderError=Send Later: Mappen %S kan vara skadad. Var vänlig öppna dess egenskaper och reparera den. Läs mer på https://blog.kamens.us/send-later/#corrupt-drafts-error.
MessageResendError=Send Later: Försöker du skicka ett meddelande som redan har skickats?! Din Utkorg- eller Utkast-mapp %S är antagligen skadad. Reparera dem genom att följa instruktionerna på https://blog.kamens.us/send-later/#corrupt-outbox.
minutely=varje minut
daily=varje dag
weekly=varje vecka
monthly=varje månad
yearly=varje år
plural_minutely=minuter
plural_daily=dagar
plural_weekly=veckor
plural_monthly=månader
plural_yearly=år
every_minutely=var %S minut
every_daily=var %S dag
every_weekly=var %S vecka
every_monthly=var %S månad
every_yearly=var %S år
everyempty=vecka i månaden
everymonthly=%1$S %2$Sen i månaden
everymonthly_short=%1$S %2$Sen
betw_times=Mellan %S:%S och %S:%S
only_on_days=på %S
day0=söndag
day1=måndag
day2=tisdag
day3=onsdag
day4=torsdag
day5=fredag
day6=lördag
ord1=1:a
ord2=2:a
ord3=3:e
ord4=4:e
ord5=5:e
draftSaveWarning=VARNING: För att förhindra att meddelandet skickas av Send Later medan du redigerar det, så har dess schemalagda sändningstid tagits bort. Ange en ny sändningstid när du har slutfört redigeringen av meddelandet.
AreYouSure=Är du säker?
OutboxConfirmMessage=Alternativet “Lägg i Utkorgen” placerar omedelbart meddelandet i din utkorg. Det schemalägger INTE meddelandet för sändning vid en specifik tidpunkt. För att göra det, klicka på knappen “Skicka kring” i den gröna rutan efter det att du har angivit en giltig sändningstid. Är du säker på att du vill lägga meddelandet i Utkorgen nu?
SendNowConfirmMessage=Genom att klicka på “Skicka nu” sänds meddelandet omedelbart. Meddelandet schemaläggs INTE till en viss tid. För att schemalägga väljer du en tidpunkt och klickar på “Skicka kring” knappen i den gröna boxen. Är du säker på att du vill skicka meddelandet direkt?
ConfirmAgain=Visa denna varning nästa gång
ScheduledMessagesWarningTitle=Varning: Schemalagda meddelanden
ScheduledMessagesWarningQuitRequested=Det finns meddelanden som har schemalagts för sändning. Send Later kan endast skicka meddelanden när %S körs. Är du säker på att du vill avsluta?
ScheduledMessagesWarningQuit=Send Later kan endast skicka meddelanden när %S körs. Kom ihåg att starta om programmet innan dina meddelanden har schemalagts att skickas!
EnigmailIncompatTitle=Send Later / Enigmail kompatibilitetsproblem
EnigmailIncompatText=Den installerade versionen av Enigmail är inkompatibel med Send Later och schemaläggning med Send Later är avaktiverad. Kontakta utvecklare av Send Later (jik@kamens.us) för assistans.
TimeMismatchConfirmTitle=Inställning för att skicka överensstämmer ej
TimeMismatchConfirmBody=Angiven tidpunkt för att skicka, %1$S, överensstämmer inte med angiven tidsinställning. Klicka på Avbryt för att ändra tid för att skicka eller klicka OK för att automatiskt justera tiden till %2$S.
endTimeWarningTitle=Ogiltig inställning för tid
endTimeWarningBody=Inställning för sluttid kan inte vara tidigare än starttid. Justera eller avaktivera tidsinställning.
missingDaysWarningTitle=Ogiltig inställning för dag
missingDaysWarningBody=Du har aktiverat daginställning utan att ange några dagar. Avaktivera daginställning eller ange minst en dag för sändning.
InvalidArgsTitle=Ogiltig funktionsargument
InvalidArgsBody=Funktionsargumenten är inte giltiga. Ange en JavaScript-lista, utan de omslutande hakparenteserna.
BlockedLateMessage=Meddelandet med ämne “%1$S” i mappen för Utkast %2$S har schemalagts för sändning för mer än %3$S minuter sen och sändningen har blockerats. För att skicka meddelandet kan du ändra ditt utkast och antingen skicka direkt eller schemalägga på nytt. Du kan också avaktivera inställning "Skicka inte meddelanden mer än # minuter sent” för att skicka försenade meddelanden.
EditorReadMeHelp=All text som du lägger in här visas som en knappbeskrivning när du håller muspekaren över namnet på funktionen i menyn. Du kan använda detta för att dokumentera vad funktionen gör och vilka argument den accepterar.
_BusinessHoursCode=// Standardvärden\nvar workDays = [1, 2, 3, 4, 5]; // Mån- Fre; Sön == 0, Lör == 6\nvar workStart = [8, 30]; // Början på arbetsdag som [H, M]\nvar workEnd = [17, 30]; // Slutet på arbetsdag som [H, M]\nif (args && args[0])\n    workDays = args[0];\nif (args && args[1])\n    workStart = args[1];\nif (args && args[2])\n    workEnd = args[2];\nif (prev)\n    // Förväntas normalt inte, men används som aktuell tid vid testning.\n    next = new Date(prev);\nelse\n    next = new Date();\n// Om vi har passerat slutet på arbetsdagen eller om det inte är en arbetsdag,\n// gå till början av nästa arbetsdag.\nwhile ((next.getHours() > workEnd[0]) ||\n       (next.getHours() == workEnd[0] && next.getMinutes() > workEnd[1]) ||\n       (workDays.indexOf(next.getDay()) == -1)) {\n    next.setDate(next.getDate() + 1);\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}\n// Om vi är före början av arbetdagen, gå till starttidpunkten.\nif ((next.getHours() < workStart[0]) ||\n    (next.getHours() == workStart[0] && next.getMinutes() < workStart[1])) {\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}
DaysInARowCode=// Skicka det första meddelandet nu, följande meddelanden en gång per dag.\nif (! prev)\n    next = new Date();\nelse {\n    var now = new Date();\n    next = new Date(prev); // Kopiera datum-argumentet så vi inte ändrar det.\n    do {\n        next.setDate(next.getDate() + 1);\n    } while (next < now);\n    // ^^^ Skicka inte i förfluten tid, ifall Thunderbird inte var aktivt vid den \n    // schemalagda sändtidpunkten \n}\nif (! args) // Skicka meddelanden tre gånger som standard.\n    args = [3];\nnextargs = [args[0] - 1];\n// Repetera om vi inte ännu har skickat tillräckligt många gånger.\nif (nextargs[0] > 0)\n    nextspec = "function " + specname;
DaysInARowHelp=Skicka meddelandet nu, och därefter en gång per dag vid samma tid, tills det har sänts tre gånger. Ange ett tal som argument för att ändra det totala antalet utskick.
DiscardConfirmTitle=Ignorera ändringar?
DiscardConfirmBody=Det finns ej sparade ändringar. Vill du kasta bort dem?
UntestedSaveTitle=Spara otestad funktion?
UntestedSaveBody=Funktionen har inte testats (med knappen "Kör") sedan den ändrades senast. Är du säker på att du vill spara eller exportera den?
BadSaveTitle=Ogiltig funktionsnamn eller kod
BadSaveBody=Se till att funktionens namn och kod är giltig innan du sparar eller exporterar.
ReplacingFunctionTitle=Skriv över befintlig funktion?
ReplacingFunctionBody=En funktion med det angivna namnet finns redan. Är du säker på att du vill ersätta den?
NoNextValueError=Funktion angav inte ett värde för "nästa".
BadNextValueError="nästa" värdet "%1$S" är inte ett tal eller datum
BadNextArgsError="nextargs" värdet "%1$S" är inte en array
FunctionDeleteConfirmBody=Är du säker på att du vill ta bort denna funktion? Om den är kopplad till någon genvägsknapp kommer den sluta fungera. Om det finns några återkommande meddelanden som använder funktionen kommer dem inte att kunna omplaneras efter nästa gång de skickats.
ImportTitle=Välj fil att importera
SLJFilterLabel=Send Later JSON-filer
ImportError=Fel vid import
ExportTitle=Välj destination för export
RenameFunctionTitle=Byta namn på befintlig funktion?
RenameFunctionBody=Du har ändrat namnet på en befintlig funktion, "%1$S". Vill du byta namn på den befintliga funktionen eller spara en separat funktion med det nya namnet?
RenameFunctionRenameButton=Ändra namn
RenameFunctionNewButton=Ny
FunctionErrorTitle=Fel vid anrop av dynamisk funktion
FunctionErrorBody=Fel vid anrop av dynamisk schemaläggningsfunktion: "%1$S"
EditorReadMeCode=// Welcome to the Send Later function editor!\n//\n// The editor allows you to create JavaScript functions implementing complex\n// message scheduling logic which can be associated with shortcut buttons or\n// selected in the Send Later dialog.\n//\n// As you can see above, when a scheduling function is called, it will be given\n// three arguments:\n// * "specname" is needed if you want this function to recur (see below)\n// * "prev" is the previous scheduled send time, if this is a recurring\n//   invocation\n// * "args" is the extra arguments returned by the previous invocation if this\n//   is a recurring invocation\n//\n// Your code needs to set the variables "next", "nextspec", and\n// "nextargs" as follows:\n//\n// * "next" is either the number of minutes in the future or a Date object\n//   indicating when the message should be sent.\n// * "nextspec" is a recurrence specification if this is intended to be a\n//   recurring message (see\n//   https://blog.kamens.us/send-later/#dynamic-recurrence). If you don't set\n//   this, then the message will only be sent once. Note: if you want your\n//   function to be called again for recurrence, do:\n//     nextspec = "function " + specname;\n// * "nextargs" is an array of arguments you want to be passed into the next\n//   invocation of the function as "args".\n//\n// While you are working on your function, you can test it by filling in values\n// for "prev" and "args" in the Text boxes below and then clicking "Execute" to\n// execute the function and see the results.\n//\n// There are two pre-configured sample functions, "BusinessHours" and\n// "DaysInARow", which you can look at and play with to learn more.\n//\n// This "ReadMeFirst" function just causes the message to be sent around now,\n// via the following line.\nnext = new Date();
BusinessHoursHelp=Send the message now if it is during business hours, or at the beginning of the next work day. You can change the definition of work days (default: Mon - Fri) by passing in an array of work-day numbers as the first argument, where 0 is Sunday and 6 is Saturday. You can change the work start or end time (default: 8:30 - 17:30) by passing in an array of [H, M] as the second or third argument. Specify “null” for earlier arguments you don't change. For example, “null, [9, 0], [17, 0]” changes the work hours without changing the work days.
cancel_on_reply=cancel on reply
