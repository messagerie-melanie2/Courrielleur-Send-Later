# -*- coding: utf-8 -*-
sendaround=将在此时间附近发送
entervalid=请在上面输入有效的日期
sendwithfunction=根据函数“%1$S”发送
sendspecifyfunction=从上方菜单中选择一个函数
January=一月
February=二月
March=三月
April=四月
May=五月
June=六月
July=七月
August=八月
September=九月
October=十月
November=十一月
December=十二月
OptionShortcutAlertTitle=无效的快捷按钮值
OptionShortcutAlertText=快捷按钮 %1$S 的值“%2$S”无效
SendingUnsentError=Send Later: 发送未发送消息时出错。您的发件箱可能已损坏，预定要发送的消息可能未被发出。参看 https://blog.kamens.us/send-later/#outbox
CopyUnsentError=Send Later: 复制未发送消息到发件箱时出错（错误代码 %x）。Send Later已被禁用！参看 https://blog.kamens.us/send-later/#outbox-copy-failure
CopyRecurError=Send Later: 复制周期性消息到草稿箱时出错（错误代码 %x）。Send Later已被禁用！参看 https://blog.kamens.us/send-later/#drafts-copy-failure
CorruptFolderError=Send Later: 文件夹 %S 可能已损坏。请打开其属性并修复它。参看 https://blog.kamens.us/send-later/#corrupt-drafts-error
MessageResendError=Send Later: 尝试重新发送已发送的消息？！你的发件箱或草稿文件夹 %S 可能已损坏。请按照 https://blog.kamens.us/send-later/#corrupt-outbox 上的描述进行修复。
minutely=每分钟
daily=每天
weekly=每周
monthly=每月
yearly=每年
plural_minutely=分钟
plural_daily=天
plural_weekly=星期
plural_monthly=月
plural_yearly=年
every_minutely=每 %S 分钟
every_daily=每 %S 天
every_weekly=每 %S 个星期
every_monthly=每 %S 个月
every_yearly=每 %S 年
everyempty=一个月中的星期
everymonthly=每月 %1$S %2$S
everymonthly_short=%1$S %2$S
betw_times=betw. %S:%S and %S:%S
only_on_days=on %S
day0=星期日
day1=星期一
day2=星期二
day3=星期三
day4=星期四
day5=星期五
day6=星期六
ord1=第 1 个
ord2=第 2 个
ord3=第 3 个
ord4=第 4 个
ord5=第 5 个
draftSaveWarning=警告：为了防止“Send Later”发送您正在编辑的消息，预定的发送时间已被取消。请在您完成编辑后重新设置消息的发送时间。
AreYouSure=您确定吗？
OutboxConfirmMessage=点击“放到发件箱”会立即将消息放到你的发件箱中。它不会安排消息在特定的时间发送。如果要指定发送时间，请在输入有效的发送时间后，点击绿色框中的“将在此时间附近发送”按钮。你确定要立即将消息放到发件箱中吗？
SendNowConfirmMessage=点击“现在发送”以立即发送消息。这 并不会 为消息安排日程。如有日程需要，以合法格式输入发送时间后，点击位于绿色输入框旁的“在此时发送”按钮。你希望现在发送消息吗？
ConfirmAgain=下次仍显示此警告文本
ScheduledMessagesWarningTitle=预定消息警告
ScheduledMessagesWarningQuitRequested=您有预定发送的消息。“Send Later”只能在 %S 运行的时候发送您的消息。您确定要退出吗？
ScheduledMessagesWarningQuit=“Send Later”只能在 %S 运行的时候发送消息。请记得在您的预定发送时间之前重新运行程序！
EnigmailIncompatTitle=Send Later以及Enigmail兼容性问题
EnigmailIncompatText=现在安装的Enigmail版本与Send Later不兼容，因此Send Later消息日程已禁用。请联系Send Later维护人员(jik@kamens.us)以获得帮助。
TimeMismatchConfirmTitle=发送时间与限制不匹配
TimeMismatchConfirmBody=您输入的发送时间 %1$S 不在指定的时间限制里。点击取消来编辑您的发送时间，或者点击确定来自动调制发送时间到 %2$S。
endTimeWarningTitle=无效消息时间限制
endTimeWarningBody=当指定消息的时间限制时，结束时间不能在开始时间之前。请调整您的时间限制或者禁用此选项。
missingDaysWarningTitle=无效日期限制
missingDaysWarningBody=您启用了消息日期限制但没有指定任何日期。请禁用消息日期限制或者至少指定一个发送日。
InvalidArgsTitle=非法函数参数
InvalidArgsBody=这一函数参数不可用。指定一个不带方括号的JavaScript表单。
BlockedLateMessage=在草稿夹 %2$S 中标题为“%1$S”的消息的预定发送时间在 %3$S 分钟之前，所以被阻止发送。您需要编辑草稿并手动发送或重新预定时间。您也可以禁用“如果已经比预定时间晚了 # 分钟则不要发送消息”选项以避免阻止发送超时的消息。
EditorReadMeCode=// Welcome to the Send Later function editor!\n//\n// The editor allows you to create JavaScript functions implementing complex\n// message scheduling logic which can be associated with shortcut buttons or\n// selected in the Send Later dialog.\n//\n// As you can see above, when a scheduling function is called, it will be given\n// three arguments:\n// * "specname" is needed if you want this function to recur (see below)\n// * "prev" is the previous scheduled send time, if this is a recurring\n//   invocation\n// * "args" is the extra arguments returned by the previous invocation if this\n//   is a recurring invocation\n//\n// Your code needs to set the variables "next", "nextspec", and\n// "nextargs" as follows:\n//\n// * "next" is either the number of minutes in the future or a Date object\n//   indicating when the message should be sent.\n// * "nextspec" is a recurrence specification if this is intended to be a\n//   recurring message (see\n//   https://blog.kamens.us/send-later/#dynamic-recurrence). If you don't set\n//   this, then the message will only be sent once. Note: if you want your\n//   function to be called again for recurrence, do:\n//     nextspec = "function " + specname;\n// * "nextargs" is an array of arguments you want to be passed into the next\n//   invocation of the function as "args".\n//\n// While you are working on your function, you can test it by filling in values\n// for "prev" and "args" in the Text boxes below and then clicking "Execute" to\n// execute the function and see the results.\n//\n// There are two pre-configured sample functions, "BusinessHours" and\n// "DaysInARow", which you can look at and play with to learn more.\n//\n// This "ReadMeFirst" function just causes the message to be sent around now,\n// via the following line.\nnext = new Date();
EditorReadMeHelp=任何放置在此处的文字，均会在鼠标悬停在菜单功能名称以提示方式显示。你可以使用它来描述函数和接受的参数。
_BusinessHoursCode=// Defaults\nvar workDays = [1, 2, 3, 4, 5]; // Mon - Fri; Sun == 0, Sat == 6\nvar workStart = [8, 30]; // Start of the work day as [H, M]\nvar workEnd = [17, 30]; // End of the work day as [H, M]\nif (args && args[0])\n    workDays = args[0];\nif (args && args[1])\n    workStart = args[1];\nif (args && args[2])\n    workEnd = args[2];\nif (prev)\n    // Not expected in normal usage, but used as the current time for testing.\n    next = new Date(prev);\nelse\n    next = new Date();\n// If we're past the end of the workday or not on a workday, move to the work\n// start time on the next day.\nwhile ((next.getHours() > workEnd[0]) ||\n       (next.getHours() == workEnd[0] && next.getMinutes() > workEnd[1]) ||\n       (workDays.indexOf(next.getDay()) == -1)) {\n    next.setDate(next.getDate() + 1);\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}\n// If we're before the beginning of the workday, move to its start time.\nif ((next.getHours() < workStart[0]) ||\n    (next.getHours() == workStart[0] && next.getMinutes() < workStart[1])) {\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}
BusinessHoursHelp=在办公时间内或在下一个工作日开始时立即发送消息。 你可以在第一个参数发出工作日数字数组(array)修改办公时间（预设为周一至周五），其中0为星期日，6为星期六。你可在第二及第三个参数发出一个[H，M]数组，更改工作开始或结束时间（预设为8:30 - 17:30）。如不更改较早的参数，请指定“null”。 例如，“null，[9，0]，[17，0]”改变工作时间，而不改变工作日。
DaysInARowCode=// 现在发送第一条消息，随后发送一条消息。\nif (! prev)\n    next = new Date();\nelse {\n    var now = new Date();\n    next = new Date(prev); // 复制日期参数，以便我們不会修改它。\n    do {\n        next.setDate(next.getDate() + 1);\n    } while (next < now);\n     // ^^^不要尝试在过去发送，以防 Thunderbird\n     // 在预定的发送时间睡着了。\n\n}\nif (! args) // 预设发送消息三次。\n    args = [3];\nnextargs = [args[0] - 1];\n// 如果我们还没有做完发送，就会重新执行\nif (nextargs[0] > 0)\n    nextspec = "function " + specname;
DaysInARowHelp=立即发送消息，随后每天一次，直到发送三次至止。 提供一个数字作参数，來更改发送的总数。
DiscardConfirmTitle=放弃更改？
DiscardConfirmBody=有未保存的更改？放弃吗？
UntestedSaveTitle=保存未测试函数？
UntestedSaveBody=这个函数修改之后，尚未测试（以”运行“键）。你确定要保存或导出？
BadSaveTitle=非法函数名称或代码
BadSaveBody=请在保存或导出前确认函数名称及代码合法。
ReplacingFunctionTitle=覆写现存函数？
ReplacingFunctionBody=已有同名的函数。你确定要替换它？
NoNextValueError=函数沒有设定"next"值。
BadNextValueError="next"值"%1$S"不是一个数字或日期
BadNextArgsError="nextargs"值"%1$S"不是一个数组
FunctionDeleteConfirmBody=你确定要删除这个函数吗？如果它关联到快捷按钮，按钮将会失效。如果有任何重复发送的信使用这个功能，也将会导致到下一次发送后无法重新排期。
ImportTitle=选择导入文件
SLJFilterLabel=Send Later的JSON文件
ImportError=导入错误
ExportTitle=选择导入目标
RenameFunctionTitle=重命名现存函数？
RenameFunctionBody=你已修改现存函数名，“%1$S”。你希望重命名现存函数还是以这一新名称保存一个不同的函数？
RenameFunctionRenameButton=重命名
RenameFunctionNewButton=新建
FunctionErrorTitle=启动动态功能错误
FunctionErrorBody=启动动态排期功能 “%1$S”错误
cancel_on_reply=回复后取消
