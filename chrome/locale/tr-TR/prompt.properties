sendaround=Send around
entervalid=Enter a valid date above
sendwithfunction=Send according to function “%1$S”
sendspecifyfunction=Select a function from the menu above
January=January
February=February
March=March
April=April
May=May
June=June
July=July
August=August
September=September
October=October
November=November
December=December
OptionShortcutAlertTitle=Invalid shortcut value
OptionShortcutAlertText=Shortcut %1$S has invalid value “%2$S”
SendingUnsentError=Send Later: Error sending unsent messages. Your Outbox may be corrupt, and your scheduled messages may not have been sent. See https://blog.kamens.us/send-later/#outbox.
CopyUnsentError=Send Later: Error copying scheduled message to Outbox for delivery (code %x). Send Later has been disabled! See https://blog.kamens.us/send-later/#outbox-copy-failure.
CopyRecurError=Send Later: Error copying recurring message into Drafts folder (code %x). Send Later has been disabled! See https://blog.kamens.us/send-later/#drafts-copy-failure.
CorruptFolderError=Send Later: Folder %S may be corrupt. Please open its properties and repair it. See https://blog.kamens.us/send-later/#corrupt-drafts-error.
MessageResendError=Send Later: Attempt to resend already sent message?! Your Outbox or Drafts folder %S is probably corrupt. Please repair them as described at https://blog.kamens.us/send-later/#corrupt-outbox.
minutely=minutely
daily=daily
weekly=weekly
monthly=monthly
yearly=yearly
plural_minutely=minutes
plural_daily=days
plural_weekly=weeks
plural_monthly=months
plural_yearly=years
every_minutely=every %S minutes
every_daily=every %S days
every_weekly=every %S weeks
every_monthly=every %S months
every_yearly=every %S years
everyempty=week of the month
everymonthly=%1$S %2$S of the month
everymonthly_short=%1$S %2$S
betw_times=betw. %S:%S and %S:%S
only_on_days=on %S
day0=Sunday
day1=Monday
day2=Tuesday
day3=Wednesday
day4=Thursday
day5=Friday
day6=Saturday
ord1=1st
ord2=2nd
ord3=3rd
ord4=4th
ord5=5th
draftSaveWarning=WARNING: To prevent the message from being delivered by Send Later while you are editing it, its scheduled send time has been canceled. Please reschedule the message when you are done editing it.
AreYouSure=Are you sure?
OutboxConfirmMessage=Clicking “Put in Outbox” puts the message in your Outbox immediately. It DOES NOT schedule the message to be sent at a specific time. For that, click the “Send around” button in the green box after entering a valid send time. Are you sure you want to put the message in your Outbox now?
SendNowConfirmMessage=Clicking “Send Now” sends the message immediately. It DOES NOT schedule the message to be sent at a specific time. For that, click the “Send around” button in the green box after entering a valid send time. Are you sure you want to send the message now?
ConfirmAgain=Show this warning next time
ScheduledMessagesWarningTitle=Scheduled messages warning
ScheduledMessagesWarningQuitRequested=There are messages scheduled to be sent. Send Later can only send messages when %S is running. Are you sure you want to exit?
ScheduledMessagesWarningQuit=Send Later can only send messages when %S is running. Please remember to restart it before your messages are scheduled to be sent!
EnigmailIncompatTitle=Send Later / Enigmail compatibility issue
EnigmailIncompatText=The installed version of Enigmail is incompatible with Send Later, so scheduling messages with Send Later has been disabled. Please contact the maintainer of Send Later (jik@kamens.us) for assistance.
TimeMismatchConfirmTitle=Send time / restriction mismatch
TimeMismatchConfirmBody=The send time %1$S does not fall within the specified time restrictions. Click Cancel to edit your send time or restrictions, or OK to adjust it automatically to %2$S.
endTimeWarningTitle=Invalid message time restriction
endTimeWarningBody=When specifying a message time restriction, the end time cannot be earlier than the start time. Please adjust your time restriction or disable it.
missingDaysWarningTitle=Invalid day restriction
missingDaysWarningBody=You have enabled a message day restriction without specifying any days. Please disable the day restriction or specify at least one delivery day.
InvalidArgsTitle=Invalid function arguments
InvalidArgsBody=The function arguments are not valid. Specify a JavaScript list, without the enclosing square braces.
BlockedLateMessage=The message with subject “%1$S” in Drafts folder %2$S was scheduled to be delivered more than %3$S minutes ago, so delivery has been blocked. You should edit the draft and either send it by hand or reschedule it. You can also disable the “Don't deliver messages more than # minutes late” preference to stop blocking delivery of late messages.
EditorReadMeCode=// Welcome to the Send Later function editor!\n//\n// The editor allows you to create JavaScript functions implementing complex\n// message scheduling logic which can be associated with shortcut buttons or\n// selected in the Send Later dialog.\n//\n// As you can see above, when a scheduling function is called, it will be given\n// three arguments:\n// * "specname" is needed if you want this function to recur (see below)\n// * "prev" is the previous scheduled send time, if this is a recurring\n//   invocation\n// * "args" is the extra arguments returned by the previous invocation if this\n//   is a recurring invocation\n//\n// Your code needs to set the variables "next", "nextspec", and\n// "nextargs" as follows:\n//\n// * "next" is either the number of minutes in the future or a Date object\n//   indicating when the message should be sent.\n// * "nextspec" is a recurrence specification if this is intended to be a\n//   recurring message (see\n//   https://blog.kamens.us/send-later/#dynamic-recurrence). If you don't set\n//   this, then the message will only be sent once. Note: if you want your\n//   function to be called again for recurrence, do:\n//     nextspec = "function " + specname;\n// * "nextargs" is an array of arguments you want to be passed into the next\n//   invocation of the function as "args".\n//\n// While you are working on your function, you can test it by filling in values\n// for "prev" and "args" in the Text boxes below and then clicking "Execute" to\n// execute the function and see the results.\n//\n// There are two pre-configured sample functions, "BusinessHours" and\n// "DaysInARow", which you can look at and play with to learn more.\n//\n// This "ReadMeFirst" function just causes the message to be sent around now,\n// via the following line.\nnext = new Date();
EditorReadMeHelp=Any text you put here will be displayed as a tooltip when you hover over the name of the function in the menu. You can use this to document what the function does and what arguments it accepts.
_BusinessHoursCode=// Defaults\nvar workDays = [1, 2, 3, 4, 5]; // Mon - Fri; Sun == 0, Sat == 6\nvar workStart = [8, 30]; // Start of the work day as [H, M]\nvar workEnd = [17, 30]; // End of the work day as [H, M]\nif (args && args[0])\n    workDays = args[0];\nif (args && args[1])\n    workStart = args[1];\nif (args && args[2])\n    workEnd = args[2];\nif (prev)\n    // Not expected in normal usage, but used as the current time for testing.\n    next = new Date(prev);\nelse\n    next = new Date();\n// If we're past the end of the workday or not on a workday, move to the work\n// start time on the next day.\nwhile ((next.getHours() > workEnd[0]) ||\n       (next.getHours() == workEnd[0] && next.getMinutes() > workEnd[1]) ||\n       (workDays.indexOf(next.getDay()) == -1)) {\n    next.setDate(next.getDate() + 1);\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}\n// If we're before the beginning of the workday, move to its start time.\nif ((next.getHours() < workStart[0]) ||\n    (next.getHours() == workStart[0] && next.getMinutes() < workStart[1])) {\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}
BusinessHoursHelp=Send the message now if it is during business hours, or at the beginning of the next work day. You can change the definition of work days (default: Mon - Fri) by passing in an array of work-day numbers as the first argument, where 0 is Sunday and 6 is Saturday. You can change the work start or end time (default: 8:30 - 17:30) by passing in an array of [H, M] as the second or third argument. Specify “null” for earlier arguments you don't change. For example, “null, [9, 0], [17, 0]” changes the work hours without changing the work days.
DaysInARowCode=// Send the first message now, subsequent messages once per day.\nif (! prev)\n    next = new Date();\nelse {\n    var now = new Date();\n    next = new Date(prev); // Copy date argument so we don't modify it.\n    do {\n        next.setDate(next.getDate() + 1);\n    } while (next < now);\n    // ^^^ Don't try to send in the past, in case Thunderbird was asleep at\n    // the scheduled send time.\n}\nif (! args) // Send messages three times by default.\n    args = [3];\nnextargs = [args[0] - 1];\n// Recur if we haven't done enough sends yet.\nif (nextargs[0] > 0)\n    nextspec = "function " + specname;
DaysInARowHelp=Send the message now, and subsequently once per day at the same time, until it has been sent three times. Specify a number as an argument to change the total number of sends.
DiscardConfirmTitle=Discard changes?
DiscardConfirmBody=There are unsaved changes. Do you want to discard them?
UntestedSaveTitle=Save untested function?
UntestedSaveBody=The function has not been tested (with the “Execute” button) since it was last modified. Are you sure you want to save or export it?
BadSaveTitle=Invalid function name or code
BadSaveBody=Please ensure that the function name and code are valid before save or export.
ReplacingFunctionTitle=Overwrite existing function?
ReplacingFunctionBody=A function with the specified name already exists. Are you sure you want to replace it?
NoNextValueError=Function did not set a “next” value.
BadNextValueError=“next” value “%1$S” is not a number or Date
BadNextArgsError=“nextargs” value “%1$S” is not an Array
FunctionDeleteConfirmBody=Are you sure you want to delete this function? If it is associated with any shortcut buttons, they will stop working, and if there are any recurring messages using it, they will fail to reschedule after the next time they are sent.
ImportTitle=Choose file to import
SLJFilterLabel=Send Later JSON Files
ImportError=Import Error
ExportTitle=Choose export destination
RenameFunctionTitle=Rename existing function?
RenameFunctionBody=You have modified the name of an existing function, “%1$S”. Do you want to rename the existing function or save a separate function with the new name?
RenameFunctionRenameButton=Rename
RenameFunctionNewButton=New
FunctionErrorTitle=Error invoking dynamic function
FunctionErrorBody=Error invoking dynamic scheduling function: “%1$S”
cancel_on_reply=cancel on reply
