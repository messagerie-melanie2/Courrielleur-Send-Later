# -*- coding: utf-8 -*-
sendaround=Enviar en torno al
entervalid=Introduzca una fecha válida arriba
sendwithfunction=Enviar de acuerdo a la función: “%1$S”
sendspecifyfunction=Seleccione una función en el menú de arriba
January=Enero
February=Febrero
March=Marzo
April=Abril
May=Mayo
June=Junio
July=Julio
August=Agosto
September=Septiembre
October=Octubre
November=Noviembre
December=Diciembre
OptionShortcutAlertTitle=Valor de botón de preajuste no válido
OptionShortcutAlertText=El preajuste del botón %1$S tiene el valor “%2$S” no válido
SendingUnsentError=Send Later: Error al remitir mensajes no enviados. Su Bandeja de Salida puede estar dañada, y sus mensajes programados quizá no hayan sido enviados. Vea https://blog.kamens.us/send-later/#outbox.
CopyUnsentError=Send Later: Error al copiar mensaje programado a la Bandeja de Salida para su envío (código %x). ¡Send Later ha sido desactivado! Vea https://blog.kamens.us/send-later/#outbox-copy-failure.
CopyRecurError=Send Later: Error al copiar mensajes recurrentes a la carpeta Borradores (código %x). ¡Send Later ha sido desactivado! Vea https://blog.kamens.us/send-later/#drafts-copy-failure.
CorruptFolderError=Send Later: La carpeta %S puede estar dañada. Por favor, abra sus propiedades y repárela. Vea https://blog.kamens.us/send-later/#corrupt-drafts-error.
MessageResendError=Send Later: ¡¿Intenta volver a remitir un mensaje ya enviado?! Su Bandeja de Salida o su carpeta de Borradores %S probablemente está dañada. Por favor, repárelas como se describe en https://blog.kamens.us/send-later/#corrupt-outbox.
minutely=cada minuto
daily=a diario
weekly=semanalmente
monthly=mensualmente
yearly=anualmente
plural_minutely=minutos
plural_daily=días
plural_weekly=semanas
plural_monthly=meses
plural_yearly=años
every_minutely=cada %S minutos
every_daily=cada %S días
every_weekly=cada %S semanas
every_monthly=cada %S meses
every_yearly=cada %S años
everyempty=semana del mes
everymonthly=%1$S %2$S de cada mes
everymonthly_short=%1$S %2$S
betw_times=entre las %S:%S y las %S:%S
only_on_days=en %S
day0=Domingo
day1=Lunes
day2=Martes
day3=Miércoles
day4=Jueves
day5=Viernes
day6=Sábado
ord1=1º
ord2=2º
ord3=3º
ord4=4º
ord5=5º
draftSaveWarning=ADVERTENCIA: Para evitar que el mensaje sea enviado por Send Later mientras lo edita, su hora de envío programada ha sido cancelada. Por favor, vuelva a programar el envío del mensaje cuando haya terminado de editarlo.
AreYouSure=¿Está seguro?
OutboxConfirmMessage=Hacer clic en “Poner en la Bandeja de Salida” sitúa el mensaje en su Bandeja de Salida de inmediato. NO programa el mensaje para que sea enviado a una hora específica. Para eso, haga clic en el botón “Enviar en torno al” en el recuadro verde, tras introducir una hora de envío válida. ¿Está seguro de que quiere poner el mensaje en su Bandeja de Salida ahora?
SendNowConfirmMessage=Hacer clic en “Enviar ahora” envía el mensaje inmediatamente. NO programa el mensaje para que sea enviado a una hora específica. Para eso, haga clic en el botón “Enviar en torno al” en el recuadro verde tras introducir una hora de envío válida. ¿Está seguro de que quiere enviar el mensaje ahora?
ConfirmAgain=Mostrar esta advertencia la próxima vez
ScheduledMessagesWarningTitle=Aviso de mensajes programados
ScheduledMessagesWarningQuitRequested=Hay mensajes programados para ser enviados. Send Later sólo puede enviar mensajes cuando %S está en funcionamiento. ¿Está seguro de que quiere salir?
ScheduledMessagesWarningQuit=Send Later sólo puede enviar mensajes cuando %S está en funcionamiento. Por favor, ¡recuerde volver a iniciarlo antes del momento programado de envío de sus mensajes!
EnigmailIncompatTitle=Problema de compatibilidad Send Later / Enigmail
EnigmailIncompatText=La versión instalada de Enigmail es incompatible con Send Later, así que el programado de envío de mensajes de Send Later ha sido deshabilitado. Por favor, contacte con el mantenedor de Send Later (jik@kamens.us) para asistencia.
TimeMismatchConfirmTitle=Hora de envío / restricción, no coincidentes
TimeMismatchConfirmBody=La hora de envío %1$S no entra dentro de las restricciones horarias especificadas. Haga clic en Cancelar para editar su hora de envío o restricciones, o en OK para ajustar la hora de envío automáticamente a %2$S.
endTimeWarningTitle=Restricción no válida de la hora de envío
endTimeWarningBody=Cuando especifique una restricción de la hora de envío de mensaje, la hora final no puede ser anterior a la hora inicial. Por favor, ajuste su restricción horaria o desactívela.
missingDaysWarningTitle=Restricción no válida del día de envío
missingDaysWarningBody=Ha activado una restricción del día de envío de mensaje sin especificar día alguno. Por favor, desactive la restricción del día o especifique al menos un día de envío.
InvalidArgsTitle=Argumentos de función no válidos
InvalidArgsBody=Los argumentos de la función no son válidos. Especifique una lista JavaScript, sin corchetes.
BlockedLateMessage=El mensaje con el asunto “%1$S” en la carpeta de Borradores %2$S fue programado para ser enviado hace más de %3$S minutos, así que el envío ha sido bloqueado. Debe editar el borrador, y o bien enviarlo manualmente o volver a programar su envío. También puede desactivar el ajuste “No enviar mensajes con más de N minutos de retraso” para dejar de bloquear el envío de mensajes con retraso.
EditorReadMeCode=// ¡Bienvenido al editor de funciones de Send Later!\n// \n// El editor le permite crear funciones JavaScript que implementan\n// lógicas complejas de programación de envío de mensajes que se\n// pueden asociar con botones de atajo o seleccionarse en el cuadro de\n// diálogo de Send Later.\n// \n// Como puede ver arriba, cuando se llama una función de programación\n// de envío, se le proporcionan tres argumentos:\n// \n// * "specname" (nombre de la especificación) se necesita si quiere\n//   que esta función sea recurrente (vea debajo)\n// * "prev" es la anterior hora de envío programada, si esta es una\n//   invocación recurrente\n// * "args" son los argumentos extra devueltos por la anterior\n//   invocación de la función, si esta es una invocación recurrente\n// \n// Su código precisa establecer las variables "next" (siguiente\n// envío), "nextspec"(siguiente especificación), y "nextargs"\n// (siguientes argumentos) como sigue:\n//\n// * "next" es o bien el número de minutos a futuro o un objeto Date\n//   (fecha) indicando cuándo se debe enviar el mensaje.\n// \n// * "nextspec" es una especificación de recurrencia, si se pretende\n//   que sea un mensaje recurrente. Si no establece esto, entonces el\n//   mensaje sólo se enviará una vez (vea\n//   https://blog.kamens.us/send-later/#dynamic-recurrence).  Nota: Si\n//   quiere que su función sea llamada de nuevo por recurrencia, haga\n//   \n//   nextspec = "function " + specname;\n//   \n// * "nextargs" es una matriz de argumentos que quiere que sea pasada\n//   en la próxima invocación de la función como "args".\n// \n// Mientras está trabajando en su función, puede probarla rellenando\n// los valores para "prev" y "args" en los recuadros de texto de\n// debajo, y luego haciendo clic en "Ejecutar" para ejecutar la\n// función y ver los resultados.\n// \n// Hay dos funciones de ejemplo pre-configuradas, "BusinessHours"\n// (horario comercial) y "DaysInARow" (días seguidos), que puede\n// revisar y con las que puede jugar para aprender más.\n// \n// Esta función "ReadMeFirst" (léame primero) sólo hace que el mensaje\n// sea enviado aproximadamente ahora, mediante la siguiente línea:\n\nnext = new Date();
EditorReadMeHelp=[Léame primero] — Cualquier texto que ponga aquí se mostrará como una sugerencia emergente cuando se sitúe sobre el nombre de la función en el menú. Puede usar esto para documentar lo que hace la función y qué argumentos acepta.
_BusinessHoursCode=// Valores predeterminados\nvar workDays = [1, 2, 3, 4, 5]; // Lun- Vie; Dom == 0, Sáb == 6\nvar workStart = [8, 30]; // Inicio de la jornada laboral a las [H, M]\nvar workEnd = [17, 30]; // Final de la jornada laboral a las [H, M]\nif (args && args[0])\n    workDays = args[0];\nif (args && args[1])\n    workStart = args[1];\nif (args && args[2])\n    workEnd = args[2];\nif (prev)\n// No esperado en el uso normal, pero usado como hora actual para pruebas.\n    next = new Date(prev);\nelse\n    next = new Date();\n// Si ya concluyó la jornada laboral o no es día de trabajo, mover a la hora de\n// inicio de la jornada del día siguiente.\nwhile ((next.getHours() > workEnd[0]) ||\n       (next.getHours() == workEnd[0] && next.getMinutes() > workEnd[1]) ||\n       (workDays.indexOf(next.getDay()) == -1)) {\n    next.setDate(next.getDate() + 1);\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}\n// Si aún no ha comenzado la jornada laboral, mover a su hora de inicio.\nif ((next.getHours() < workStart[0]) ||\n    (next.getHours() == workStart[0] && next.getMinutes() < workStart[1])) {\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}
BusinessHoursHelp=[Horario comercial] — Envía el mensaje ahora si aún es horario comercial, o al principio de la siguiente jornada laboral. Puede cambiar la definición de los días laborables (por defecto: Lun - Vie) pasando como primer argumento una matriz de números correspondientes a tales días, donde 0 es el domingo y 6 el sábado. Puede cambiar las horas de inicio o final de la jornada laboral (predeterminadas: 8:30 - 17:30) pasando como segundo o tercer argumento una matriz de [H, M]. Especifique “null” (nulo) para argumentos iniciales que no quiera cambiar. Por ejemplo, “null [9, 0], [17, 0]” cambia las horas de trabajo sin cambiar los días laborables.
DaysInARowCode=// Enviar el primer mensaje ahora, y los mensajes subsiguientes una vez al día.\nif (! prev)\n    next = new Date();\nelse {\n    var now = new Date();\n// Copiar el argumento de fecha (Date) para que no lo modifiquemos.\n    next = new Date(prev);\n// ^^^ No realizar intentos de envío en pasado, en caso de que Thunderbird\n// estuviera en suspensión a la hora de envío programada.\n    do {\n        next.setDate(next.getDate() + 1);\n    } while (next < now);\n}\n// Enviar los mensajes por defecto tres veces.\nif (! args)\n    args = [3];\nnextargs = [args[0] - 1];\n// Recurrencia si no hemos efectuado aún suficientes envíos.\nif (nextargs[0] > 0)\n    nextspec = "function " + specname;
DaysInARowHelp=[Días seguidos] — Envia el mensaje ahora, y subsecuentemente una vez al día a la misma hora, hasta que haya sido enviado tres veces. Especifique un número como argumento para cambiar el número total de envíos
DiscardConfirmTitle=¿Descartar cambios?
DiscardConfirmBody=Hay cambios no guardados. ¿Quiere descartarlos?
UntestedSaveTitle=¿Guardar función no probada?
UntestedSaveBody=La función no ha sido probada (con el botón “Ejecutar”) ya que fue modificada recientemente. ¿Está seguro de que quiere guardarla o exportarla?
BadSaveTitle=Nombre o código de función no válido
BadSaveBody=Asegúrese de que el nombre y el código de la función son válidos antes de guardar o exportar.
ReplacingFunctionTitle=¿Sobrescribir la función existente?
ReplacingFunctionBody=Ya existe una función con el nombre especificado. ¿Está seguro de que quiere reemplazarla?
NoNextValueError=La función no estableció un valor “next” (siguiente envío).
BadNextValueError=El valor “%1$S” de “next” (siguiente envío) no es un número o fecha (Date).
BadNextArgsError=El valor “%1$S” de “nextargs” (siguientes argumentos) no es una matriz (Array).
FunctionDeleteConfirmBody=¿Está seguro de que quiere borrar esta función? Si está asociada con cualesquiera botones de atajo, dejarán de funcionar; y si hay cualesquiera mensajes recurrentes usándola, tras la próxima ocasión en que se envíen no se podrán volver a programar los envíos posteriores.
ImportTitle=Escoger fichero a importar
SLJFilterLabel=Ficheros JSON de Send Later
ImportError=Error al importar
ExportTitle=Escoger destino de exportación
RenameFunctionTitle=¿Renombrar función existente?
RenameFunctionBody=Ha modificado el nombre de una función existente, “%1$S”. ¿Quiere renombrar la función existente o guardar una función aparte con el mismo nombre?
RenameFunctionRenameButton=Renombrar
RenameFunctionNewButton=Nueva
FunctionErrorTitle=Error al invocar función dinámica
FunctionErrorBody=Error al invocar una función dinámica de programación de envíos: “%1$S”
cancel_on_reply=cancelar si respondido
