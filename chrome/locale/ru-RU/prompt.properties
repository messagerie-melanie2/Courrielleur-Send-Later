# -*- coding: utf-8 -*-
sendaround=Отправить примерно
entervalid=Введите корректную дату выше
sendwithfunction=Отправить в соответствии с функцией “%1$S“
sendspecifyfunction=Выберете функцию из меню выше
January=Январь
February=Февраль
March=Март
April=Апрель
May=Май
June=Июнь
July=Июль
August=Август
September=Сентябрь
October=Октябрь
November=Ноябрь
December=Декабрь
OptionShortcutAlertTitle=Недопустимое сокращение
OptionShortcutAlertText=Ярлык %1$S имеет недопустимое значение ”%2$S”
SendingUnsentError=Send Later: Ошибка отправления недоставленных сообщений. Папка «Исходящие» может быть повреждена, и ваши запланированные сообщения не могут быть доставлены. Смотрите https://blog.kamens.us/send-later/#outbox.
CopyUnsentError=Send Later: Ошибка копирования запланированного сообщения в папку «Исходящие» (код ошибки %x). Send Later недоступен! Смотрите https://blog.kamens.us/send-later/#outbox-copy-failure.
CopyRecurError=Send Later: Ошибка копирования повторяющегося сообщения в папку «Черновики» (код ошибки %x). Send Later недоступен! Смотрите https://blog.kamens.us/send-later/#drafts-copy-failure.
CorruptFolderError=Send Later: Папка %S может быть повреждена. Пожалуйста, откройте ее свойства восстановите их. Смотрите https://blog.kamens.us/send-later/#corrupt-drafts-error.
MessageResendError=Send Later: Попытка переотправить уже отправленное сообщение. Папка «Исходящие» или «Черновики» %S вероятно повреждена. Пожалуйста, восстановите их как сказано здесь https://blog.kamens.us/send-later/#corrupt-outbox.
minutely=ежеминутно
daily=ежедневно
weekly=еженедельно
monthly=ежемесячно
yearly=ежегодно
plural_minutely=мин.
plural_daily=дн.
plural_weekly=нед.
plural_monthly=месяцев
plural_yearly=лет
every_minutely=каждые %S минут
every_daily=каждые %S дней
every_weekly=каждые %S недель
every_monthly=каждые %S месяцев
every_yearly=каждые %S лет
everyempty=неделя месяца
everymonthly=%1$S %2$S месяца
everymonthly_short=%1$S %2$S
betw_times=между %S:%S и %S:%S
only_on_days=на %S
day0=Воскресенье
day1=Понедельник
day2=Вторник
day3=Среда
day4=Четверг
day5=Пятница
day6=Суббота
ord1=1й
ord2=2й
ord3=3й
ord4=4й
ord5=5й
draftSaveWarning=ПРЕДУПРЕЖДЕНИЕ: Чтобы предотвратить отправку через Send Later во время редактирования сообщения, его запланированное время отправки отменено. Пожалуйста, перепланируйте отправку сообщения, когда закончите его редактирование.
AreYouSure=Вы уверены?
OutboxConfirmMessage=Нажатие на “Поместить в «Исходящие»” помещает сообщение в папку «Исходящие» немедленно. Оно НЕ ПЛАНИРУЕТ отправку сообщения в указанное время. Для этого, нажмите на кнопку “Отправить примерно” в зеленой области после указания корректного времени. Вы уверены, что хотите поместить сообщение в папку «Исходящие»?
SendNowConfirmMessage=Нажатие на “Отправить сейчас” отправляет сообщение немедленно. Оно НЕ ПЛАНИРУЕТ отправку сообщения в указанное время. Для этого, нажмите на кнопку “Отправить примерно” в зеленой области после указания корректного времени. Вы уверены, что хотите отправить сообщение сейчас?
ConfirmAgain=Показывать это предупреждение в следующий раз
ScheduledMessagesWarningTitle=Предупреждение запланированных сообщений
ScheduledMessagesWarningQuitRequested=Запланированные для отправки сообщения. Send Later может отправлять сообщения только когда %S запущен. Вы уверены, что хотите выйти?
ScheduledMessagesWarningQuit=Send Later может отправлять сообщения только когда %S запущен. Пожалуйста, не забудьте включить его, прежде чем запланированные сообщения будут отправлены!
EnigmailIncompatTitle=Совместимость Send Later / Enigmail
EnigmailIncompatText=Установленная версия Enigmail несовместима с Send Later, поэтому планирование сообщения через Send Later недоступно. Для помощи, пожалуйста, свяжитесь с поддержкой Send Later (jik@kamens.us).
TimeMismatchConfirmTitle=Несоответствие времени отправки / ограничения
TimeMismatchConfirmBody=Время отправки %1$S не попадает в указанные временные ограничения. Нажмите Отмена для редактирования времени отправки или ограничений, или OK для автоматической подстройки к %2$S.
endTimeWarningTitle=Недопустимое ограничение времени сообщения
endTimeWarningBody=При задании ограничения времени сообщения, время окончания не может быть раньше, чем время начала. Пожалуйста, настройте ограничение по времени или отключить его.
missingDaysWarningTitle=Недопустимое ограничение дня
missingDaysWarningBody=Вы включили ограничение для сообщений без указания дней. Отключите ограничение по дням или укажите как минимум один день доставки.
InvalidArgsTitle=Недопустимые аргументы функции
InvalidArgsBody=Недопустимые аргументы функции. Укажите список JavaScript без заключения в квадратные скобки.
BlockedLateMessage=Сообщение с темой “%1$S” в папке «Черновики» %2$S было запланировано для отправки более чем %3$S минут(ы) назад, поэтому доставка заблокирована. Вы можете отредактировать этот черновик, и или отправить его самостоятельно или запланировать отправку. Вы можете заблокировать настройку “Не доставлять сообщения позже чем # минут”, для прекращения блокировки отправления задержанных сообщений.
EditorReadMeCode=// Добро пожаловать в редактор функций Send Later!\n//\n// Редактор позволит вам создать JavaScript функции осуществляющие комплексную\n// логику планирования сообщений с возможностью связать ее с кнопками быстрого доступа или\n// в выбранном в Send Later диалогом.\n//\n// Как вы могли видеть выше, когда функция планирования вызвана, ей будут переданы\n// три аргумента:\n// * "specname" необходим, если вы хотите, чтобы эта функция повторялась (см. ниже)\n// * "prev" это предыдущее запланированное время отправки, если\n//   это повторяющейся вызов\n// * "args" это дополнительные аргументы, возвращенные предыдущим вызовом\n//   если это повторяющиеся вызовы\n//\n// Вам нужно задать следующие переменные "next", "nextspec", и\n// "nextargs" следующим образом:\n//\n// * "next" указывается либо в минутах, либо через объект Дата\n//   указывает, когда сообщение должно быть отправлено.\n// * "nextspec" это характеристика повторения, если предполагается, что это\n//   повторяющиеся сообщение (смотрите\n//   https://blog.kamens.us/send-later/#dynamic-recurrence). Если вы не укажите\n//   это, то сообщения будут отправленны лишь однажды. Замечение: если вы хотите\n//   чтобы ваша функция вызывалась повторно, выполните:\n//     nextspec = "function " + specname;\n// * "nextargs" это массив аргументов, которые вы хотите передать в\n//   следующий вызов функции, как "args".\n//\n// Пока вы работаете над функцией, вы можете проверить ее заполнив значения\n// "prev" и "args" в текстовых окнах ниже и затем нажать "Выполнить" для\n// выполнения функции и просмотра ее результатов.\n//\n// Имеются две преднастроенные функции, "BusinessHours" и\n// "DaysInARow", которые вы можете посмотреть и воспользоваться для обучения.\n//\n// Функция "ReadMeFirst" просто выполняет немедленную отправку сообщения,\n// через следующую строчку.\nnext = new Date();
EditorReadMeHelp=Любой текст, что вы оставите здесь, будет отображен как подсказка когда вы задержите курсор над именем функции в меню. Вы можете пользоваться этим для документирования того, что делает функция и какие аргументы принимает.
_BusinessHoursCode=// Defaults\nvar workDays = [1, 2, 3, 4, 5]; // Mon - Fri; Sun == 0, Sat == 6\nvar workStart = [8, 30]; // Start of the work day as [H, M]\nvar workEnd = [17, 30]; // End of the work day as [H, M]\nif (args && args[0])\n    workDays = args[0];\nif (args && args[1])\n    workStart = args[1];\nif (args && args[2])\n    workEnd = args[2];\nif (prev)\n    // Not expected in normal usage, but used as the current time for testing.\n    next = new Date(prev);\nelse\n    next = newDate();\n// If we're past the end of the workday or not on a workday, move to the work\n// start time on the next day.\nwhile ((next.getHours() > workEnd[0]) ||\n       (next.getHours() == workEnd[0] && next.getMinutes() > workEnd[1]) ||\n       (workDays.indexOf(next.getDay()) == -1)) {\n    next.setDate(next.getDate() + 1);\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}\n// If we're before the beginning of the workday, move to its start time.\nif ((next.getHours() < workStart[0]) ||\n    (next.getHours() == workStart[0] && next.getMinutes() < workStart[1])) {\n    next.setHours(workStart[0]);\n    next.setMinutes(workStart[1]);\n}
BusinessHoursHelp=Отправить сообщение немедленно, если сейчас рабочее время, или в начале следующего рабочего дня. Вы можете изменить определения рабочих дней (по умолчанию: Пн - Пт), передав в массив рабочих дней числа, как первый аргумент, где 0 это Воскресенье и 6 это Суббота. Вы можете изменить начало и конец рабочего времени (по умолчанию: 8:30 - 17:30), введя в массив [H, M], как второй и третий аргументы. Укажите “null” для первых элементов, если вы их не меняете. Для примера, “null, [9, 0], [17, 0]” изменяет рабочие часы без изменения рабочих дней.
DaysInARowCode=// Send the first message now, subsequent messages once per day.\nif (! prev)\n    next = new Date();\nelse {\n    var now = new Date();\n    next = new Date(prev); // Copy date argument so we don't modify it.\n    do {\n        next.setDate(next.getDate() + 1);\n    } while (next < now);\n    // ^^^ Don't try to send in the past, in case Thunderbird was asleep at\n    // the scheduled send time.\n}\nif (! args) // Send messages three times by default.\n    args = [3];\nnextargs = [args[0] - 1];\n// Recur if we haven't done enough sends yet.\nif (nextargs[0] > 0)\n    nextspec = "function " + specname;
DaysInARowHelp=Отправить сообщение сейчас, и последующие сообщения раз в день в то же время, до тех пор, пока оно не будет отправлено три раза. Укажите число в качестве аргумента для изменения общего количества отправлений.
DiscardConfirmTitle=Отменить изменения?
DiscardConfirmBody=Есть несохраненные изменения. Вы действительно хотите отменить их?
UntestedSaveTitle=Сохранить непроверенную функцию?
UntestedSaveBody=Функция не была проверена (через кнопку «Выполнить») с момента последнего изменеия. Вы уверены, что хотите сохранить и экспортировать ее?
BadSaveTitle=Недопустимое имя функции или исходный код
BadSaveBody=Пожалуйста, убедитесь, что имя функции и ее код корректны, до ее сохранения или экспорта.
ReplacingFunctionTitle=Перезаписать существующую функцию?
ReplacingFunctionBody=Функция с указанным именем уже существует. Вы уверены, что хотите заменить ее?
NoNextValueError=Функция не устанавливает значение “next”.
BadNextValueError=Значение “next” “%1$S” не является числом или Датой
BadNextArgsError=Значение “nextargs” “%1$S” не является массивом
FunctionDeleteConfirmBody=Вы уверены, что хотите удалить эту функцию? Если она связана с кнопками быстрого доступа, то они перестанут работать, и, если имеются повторяющиеся сообщения, использующие ее, то они не смогут перенести расписание после того, как будут отправлены.
ImportTitle=Выберете файл для импорта
SLJFilterLabel=Send Later JSON Files
ImportError=Импорт ошибок
ExportTitle=Выбрать папку
RenameFunctionTitle=Переименовать существующую функцию?
RenameFunctionBody=Вы изменили имя существующей функции “%1$S”. Вы хотите изменить имя существующей функции или сохранить ее под новым именем?
RenameFunctionRenameButton=Переименовать
RenameFunctionNewButton=Создать
FunctionErrorTitle=Ошибка вызова динамической функции
FunctionErrorBody=Ошибка вызова функции динамического планирования: «%1$S»
cancel_on_reply=отменить после ответа
